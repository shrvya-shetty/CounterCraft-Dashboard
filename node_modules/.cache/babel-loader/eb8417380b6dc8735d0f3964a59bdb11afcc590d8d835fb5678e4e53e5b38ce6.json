{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agpot\\\\CounterCraft-Dashboard-main\\\\src\\\\UserForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: '',\n    address: '',\n    email: '',\n    phone: ''\n  });\n  const [userId, setUserId] = useState('');\n  const [isChanged, setIsChanged] = useState(false);\n\n  // Check localStorage on initial render\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('userData');\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserData && storedUserId) {\n      setUserData(JSON.parse(storedUserData));\n      setUserId(storedUserId);\n    }\n\n    // Unsaved changes warning when user tries to leave the page\n    const unsavedChangesHandler = event => {\n      if (isChanged) {\n        event.returnValue = 'You have unsaved changes!'; // Custom warning message\n      }\n    };\n    window.addEventListener('beforeunload', unsavedChangesHandler);\n    return () => {\n      window.removeEventListener('beforeunload', unsavedChangesHandler);\n    };\n  }, [isChanged]);\n\n  // Handle changes in input fields\n  const handleChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n    setIsChanged(true); // Set flag to true when user makes changes\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Ensure user ID is only generated after the form is submitted and data is valid\n    if (!userData.name || !userData.address || !userData.email || !userData.phone) {\n      alert(\"Please fill in all the fields before submitting!\");\n      return;\n    }\n    const generatedUserId = Math.random().toString(36).substring(2, 15);\n    setUserId(generatedUserId);\n\n    // Save user data and user ID to localStorage\n    localStorage.setItem('userData', JSON.stringify(userData));\n    localStorage.setItem('userId', generatedUserId);\n    setIsChanged(false); // Reset the change flag after saving\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        name: \"name\",\n        value: userData.name,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Address\",\n        name: \"address\",\n        value: userData.address,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        name: \"email\",\n        value: userData.email,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Phone\",\n        name: \"phone\",\n        value: userData.phone,\n        onChange: handleChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"oa02Xl8Bw2q/qVa87RmbnBgQqK8=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Box","jsxDEV","_jsxDEV","UserForm","_s","userData","setUserData","name","address","email","phone","userId","setUserId","isChanged","setIsChanged","storedUserData","localStorage","getItem","storedUserId","JSON","parse","unsavedChangesHandler","event","returnValue","window","addEventListener","removeEventListener","handleChange","e","target","value","handleSubmit","preventDefault","alert","generatedUserId","Math","random","toString","substring","setItem","stringify","sx","padding","children","onSubmit","label","onChange","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","_c","$RefreshReg$"],"sources":["C:/Users/agpot/CounterCraft-Dashboard-main/src/UserForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Box } from '@mui/material';\r\n\r\ninterface UserFormProps {}\r\n\r\nconst UserForm: React.FC<UserFormProps> = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: '',\r\n    address: '',\r\n    email: '',\r\n    phone: '',\r\n  });\r\n  const [userId, setUserId] = useState<string>('');\r\n  const [isChanged, setIsChanged] = useState<boolean>(false);\r\n\r\n  // Check localStorage on initial render\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('userData');\r\n    const storedUserId = localStorage.getItem('userId');\r\n    if (storedUserData && storedUserId) {\r\n      setUserData(JSON.parse(storedUserData));\r\n      setUserId(storedUserId);\r\n    }\r\n\r\n    // Unsaved changes warning when user tries to leave the page\r\n    const unsavedChangesHandler = (event: BeforeUnloadEvent) => {\r\n      if (isChanged) {\r\n        event.returnValue = 'You have unsaved changes!'; // Custom warning message\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', unsavedChangesHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', unsavedChangesHandler);\r\n    };\r\n  }, [isChanged]);\r\n\r\n  // Handle changes in input fields\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n    setIsChanged(true); // Set flag to true when user makes changes\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure user ID is only generated after the form is submitted and data is valid\r\n    if (!userData.name || !userData.address || !userData.email || !userData.phone) {\r\n      alert(\"Please fill in all the fields before submitting!\");\r\n      return;\r\n    }\r\n\r\n    const generatedUserId = Math.random().toString(36).substring(2, 15);\r\n    setUserId(generatedUserId);\r\n    \r\n    // Save user data and user ID to localStorage\r\n    localStorage.setItem('userData', JSON.stringify(userData));\r\n    localStorage.setItem('userId', generatedUserId);\r\n\r\n    setIsChanged(false); // Reset the change flag after saving\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 2 }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          value={userData.name}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          value={userData.address}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          value={userData.email}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          value={userData.phone}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n      {userId && <div>User ID: {userId}</div>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}