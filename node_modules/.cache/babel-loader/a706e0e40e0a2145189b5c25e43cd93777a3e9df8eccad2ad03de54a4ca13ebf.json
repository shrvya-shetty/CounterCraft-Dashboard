{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agpot\\\\CounterCraft-Dashboard-main\\\\src\\\\RichTextEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill'; // Install react-quill (npm install react-quill)\nimport 'react-quill/dist/quill.snow.css'; // import styles for the editor\nimport { Box, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RichTextEditor = () => {\n  _s();\n  const [editorContent, setEditorContent] = useState('');\n\n  // Load saved content from localStorage on component mount\n  useEffect(() => {\n    const savedContent = localStorage.getItem('editorContent');\n    if (savedContent) {\n      setEditorContent(savedContent);\n    }\n  }, []);\n  const handleChange = value => {\n    setEditorContent(value);\n    localStorage.setItem('editorContent', value); // Persistence\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: editorContent,\n      onChange: handleChange,\n      modules: {\n        toolbar: [[{\n          'header': '1'\n        }, {\n          'header': '2'\n        }, {\n          'font': []\n        }], [{\n          'list': 'ordered'\n        }, {\n          'list': 'bullet'\n        }], ['bold', 'italic', 'underline'], ['link'], ['image'], [{\n          'align': []\n        }], ['clean']]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => alert(editorContent),\n      children: \"Show Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(RichTextEditor, \"uvfdLie9XTvCY26Geum+dr05pzs=\");\n_c = RichTextEditor;\nexport default RichTextEditor;\nvar _c;\n$RefreshReg$(_c, \"RichTextEditor\");","map":{"version":3,"names":["React","useState","useEffect","ReactQuill","Box","Button","jsxDEV","_jsxDEV","RichTextEditor","_s","editorContent","setEditorContent","savedContent","localStorage","getItem","handleChange","value","setItem","sx","padding","children","onChange","modules","toolbar","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/agpot/CounterCraft-Dashboard-main/src/RichTextEditor.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill'; // Install react-quill (npm install react-quill)\r\nimport 'react-quill/dist/quill.snow.css'; // import styles for the editor\r\nimport { Box, Button } from '@mui/material';\r\n\r\nconst RichTextEditor: React.FC = () => {\r\n  const [editorContent, setEditorContent] = useState<string>('');\r\n\r\n  // Load saved content from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedContent = localStorage.getItem('editorContent');\r\n    if (savedContent) {\r\n      setEditorContent(savedContent);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (value: string) => {\r\n    setEditorContent(value);\r\n    localStorage.setItem('editorContent', value); // Persistence\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 2 }}>\r\n      <ReactQuill\r\n        value={editorContent}\r\n        onChange={handleChange}\r\n        modules={{\r\n          toolbar: [\r\n            [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            ['bold', 'italic', 'underline'],\r\n            ['link'],\r\n            ['image'],\r\n            [{ 'align': [] }],\r\n            ['clean']\r\n          ]\r\n        }}\r\n      />\r\n      <Button variant=\"contained\" onClick={() => alert(editorContent)}>\r\n        Show Content\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RichTextEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,aAAa,CAAC,CAAC;AACtC,OAAO,iCAAiC,CAAC,CAAC;AAC1C,SAASC,GAAG,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAIF,YAAY,EAAE;MAChBD,gBAAgB,CAACC,YAAY,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,KAAa,IAAK;IACtCL,gBAAgB,CAACK,KAAK,CAAC;IACvBH,YAAY,CAACI,OAAO,CAAC,eAAe,EAAED,KAAK,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,oBACET,OAAA,CAACH,GAAG;IAACc,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACtBb,OAAA,CAACJ,UAAU;MACTa,KAAK,EAAEN,aAAc;MACrBW,QAAQ,EAAEN,YAAa;MACvBO,OAAO,EAAE;QACPC,OAAO,EAAE,CACP,CAAC;UAAE,QAAQ,EAAE;QAAI,CAAC,EAAE;UAAE,QAAQ,EAAE;QAAI,CAAC,EAAE;UAAE,MAAM,EAAE;QAAG,CAAC,CAAC,EACtD,CAAC;UAAE,MAAM,EAAE;QAAU,CAAC,EAAE;UAAE,MAAM,EAAE;QAAS,CAAC,CAAC,EAC7C,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,CAAC,EAC/B,CAAC,MAAM,CAAC,EACR,CAAC,OAAO,CAAC,EACT,CAAC;UAAE,OAAO,EAAE;QAAG,CAAC,CAAC,EACjB,CAAC,OAAO,CAAC;MAEb;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFpB,OAAA,CAACF,MAAM;MAACuB,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAACpB,aAAa,CAAE;MAAAU,QAAA,EAAC;IAEjE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,cAAwB;AAAAuB,EAAA,GAAxBvB,cAAwB;AAwC9B,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}